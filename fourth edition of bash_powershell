package main
/*
This file has been created for eradicate the longer files in both windows and linux distributions
*/
import (
	"fmt"
	"os"
	"os/exec"
	"runtime"
)
//if the os is windows this function will execute.
func powershellScriptRunner() {
	//Powershell executable path finding block.
	rootDir     := os.Getenv("windir")
	defaultPath := "\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
	executable  := rootDir + defaultPath //powershell executable path

	//Destination directory in which script is going to run.
	listDir   := "get-childitem -path ..\\log\\"
	dirName   := " * -recurse -include *.txt |"
	condition := " where-object{$_.LastWriteTime -lt (get-date).adddays(-30)} | remove-item"
	//-30 remove-item -recurse
	script := listDir + dirName + condition

	_, err := exec.Command(executable, script).Output()
	if err != nil {
		fmt.Println("Cant able to run powershell script properly", err)
	}
}

//if the os is linux this function will execute.
func bashScriptRunner() {
	executable := "bash"
    path := "cd ../log/;"    
    command := "find -name '*.txt' -mtime "
    days := " +0 "
    action := " -delete"
    script := path+command+days+action

	_, err :=	exec.Command(executable, "-c", script).Output()   
    if err != nil {
        fmt.Println("Cant able to run bash script properly", err)
    }
}

// This function is going to execute the powershell script in the destination folder.
func scriptRunner() {
	osDist := runtime.GOOS
	switch osDist {
	case "windows":
		powershellScriptRunner()
	case "linux":
		bashScriptRunner()
	}
}

func main() {
	scriptRunner()
}
